{"version":3,"sources":["api/01.jpg","api/02.jpg","api/03.jpg","api/04.jpg","api/05.jpg","api/06.jpg","api/07.jpg","api/08.jpg","api/09.jpg","api/index.js","components/CardFront.jsx","components/Score.jsx","components/CardBack.jsx","components/Card.jsx","components/CardContainer.jsx","components/GithubLink.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","pasteleriaRecetas","id","nombre","dificultad","puntuacion","tiempo","nuevo","sinAzucar","img","require","CardFront","newRecipe","noSugar","style","backgroundImage","className","ICONS","star","heart","Score","number","icon","isOdd","fullIcons","fullIconsArr","Array","map","halfIcons","emptyIconsArr","renderIcons","CardBack","title","score","difficulty","time","Card","recipe","CardContainer","recipes","key","GithubLink","href","App","api","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8dbd0ff3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01.8af3ced1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/02.4d39d9d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/03.0f13be35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/04.6527d1c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/05.383ca1f9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/06.b32e16ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/07.12325b19.jpg\";","module.exports = __webpack_public_path__ + \"static/media/08.d22712c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/09.bd78f897.jpg\";","const pasteleriaRecetas = [\r\n  {\r\n    id: \"TM\",\r\n    nombre: \"Torta de Manzana\",\r\n    dificultad: 5,\r\n    puntuacion: 7,\r\n    tiempo: \"30 min\",\r\n    nuevo: true,\r\n    sinAzucar: false,\r\n    img: require(\"./01.jpg\"),\r\n  },\r\n  {\r\n    id: \"HK\",\r\n    nombre: \"Hot Cake\",\r\n    dificultad: 2,\r\n    puntuacion: 7,\r\n    tiempo: \"15 min\",\r\n    nuevo: false,\r\n    sinAzucar: false,\r\n    img: require(\"./02.jpg\"),\r\n  },\r\n  {\r\n    id: \"TF\",\r\n    nombre: \"Tarta de Frutilla\",\r\n    dificultad: 6,\r\n    puntuacion: 8,\r\n    tiempo: \"1 h\",\r\n    nuevo: true,\r\n    sinAzucar: false,\r\n    img: require(\"./03.jpg\"),\r\n  },\r\n  {\r\n    id: \"CF\",\r\n    nombre: \"Canasta de Frutas\",\r\n    dificultad: 2,\r\n    puntuacion: 6,\r\n    tiempo: \"50 min\",\r\n    nuevo: false,\r\n    sinAzucar: true,\r\n    img: require(\"./04.jpg\"),\r\n  },\r\n  {\r\n    id: \"TC\",\r\n    nombre: \"Tarta de Calabaza\",\r\n    dificultad: 5,\r\n    puntuacion: 9,\r\n    tiempo: \"1 h\",\r\n    nuevo: true,\r\n    sinAzucar: true,\r\n    img: require(\"./05.jpg\"),\r\n  },\r\n  {\r\n    id: \"CC\",\r\n    nombre: \"Cheesecake\",\r\n    dificultad: 5,\r\n    puntuacion: 10,\r\n    tiempo: \"50 min\",\r\n    nuevo: false,\r\n    sinAzucar: false,\r\n    img: require(\"./06.jpg\"),\r\n  },\r\n  {\r\n    id: \"CFR\",\r\n    nombre: \"Canasta Frutos Rojos\",\r\n    dificultad: 5,\r\n    puntuacion: 9,\r\n    tiempo: \"1,25 h\",\r\n    nuevo: false,\r\n    sinAzucar: false,\r\n    img: require(\"./07.jpg\"),\r\n  },\r\n  {\r\n    id: \"TI\",\r\n    nombre: \"Torta Invertida\",\r\n    dificultad: 6,\r\n    puntuacion: 5,\r\n    tiempo: \"1,15 h\",\r\n    nuevo: false,\r\n    sinAzucar: false,\r\n    img: require(\"./08.jpg\"),\r\n  },\r\n  {\r\n    id: \"CB\",\r\n    nombre: \"Creme Brulee\",\r\n    dificultad: 7,\r\n    puntuacion: 10,\r\n    tiempo: \"1,30 h\",\r\n    nuevo: false,\r\n    sinAzucar: false,\r\n    img: require(\"./09.jpg\"),\r\n  },\r\n];\r\n\r\nexport default pasteleriaRecetas;\r\n","import React from 'react';\r\n\r\n\r\nconst CardFront = ({ img, newRecipe, noSugar }) => {\r\n    return (\r\n\r\n        <div style={{ backgroundImage: `url(${img})` }} className=\"cardFront\">\r\n            {newRecipe && <span className=\"tag new-recipe\">Nuevo</span>}\r\n            {noSugar && <span className=\"tag no-sugar\">Sin azúcar</span>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardFront;","import React from 'react'\r\nimport { BsStarFill } from 'react-icons/bs';\r\nimport { BsStarHalf } from 'react-icons/bs';\r\nimport { BsStar } from 'react-icons/bs';\r\nimport { BsHeartFill } from 'react-icons/bs';\r\nimport { BsHeartHalf } from 'react-icons/bs';\r\nimport { BsHeart } from 'react-icons/bs';\r\n\r\n\r\nconst ICONS = {\r\n    star: [<BsStarFill />, <BsStarHalf />, <BsStar />],\r\n    heart: [<BsHeartFill />, <BsHeartHalf />, <BsHeart />]\r\n}\r\n\r\nconst renderIcons = (icon, number) => {\r\n    let icons\r\n    const totalIcons = 5\r\n\r\n    const isOdd = number % 2;\r\n    const fullIcons = (number - isOdd) / 2\r\n    const fullIconsArr = [...new Array(fullIcons)].map(() => ICONS[icon][0])\r\n    const halfIcons = isOdd ? ICONS[icon][1] : null;\r\n    const emptyIconsArr = [...new Array(totalIcons - fullIcons - isOdd)].map(() => ICONS[icon][2])\r\n    icons = [...fullIconsArr, halfIcons, ...emptyIconsArr]\r\n\r\n    return icons\r\n}\r\n\r\nconst Score = ({ number, icon }) => {\r\n    return (\r\n        <div className=\"score\">\r\n            {renderIcons(icon, number)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Score;\r\n","import React from 'react'\r\nimport Score from \"./Score\";\r\nimport { GiSandsOfTime } from 'react-icons/gi';\r\n\r\n\r\n\r\nconst CardBack = ({ title, score, difficulty, time }) => {\r\n    return (\r\n\r\n        <div className=\"cardBack\">\r\n            <h1 className=\"cardTitle\">{title}</h1>\r\n            <p>Puntuación: <Score number={score} icon={'heart'} /></p>\r\n            <p>Dificultad: <Score number={difficulty} icon={'star'} /></p>\r\n            <p>Tiempo: {time} <GiSandsOfTime /> </p>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CardBack;","import React from 'react'\r\nimport CardFront from './CardFront';\r\nimport CardBack from './CardBack';\r\n\r\n\r\nconst Card = ({ recipe }) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"flip-card-inner\">\r\n                <CardFront img={recipe.img} newRecipe={recipe.nuevo} noSugar={recipe.sinAzucar} />\r\n                <CardBack title={recipe.nombre} score={recipe.puntuacion} difficulty={recipe.dificultad} time={recipe.tiempo} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card'\r\n\r\nconst CardContainer = ({ recipes }) => {\r\n    return (\r\n        < div className=\"cardContainer\" >\r\n            {recipes.map(recipe => {\r\n                return <Card key={recipe.id} recipe={recipe} />\r\n            })}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default CardContainer;","import React from 'react';\r\nimport { FaGithub } from 'react-icons/fa'\r\n\r\nconst GithubLink = () => {\r\n    return (\r\n        <div className=\"github\" title=\"Ir al repositorio\"> <a\r\n            href=\"https://github.com/IrisMazzuca/Ada-It/tree/master/26-Pastry-Recipes\">\r\n            <FaGithub /></a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GithubLink;","import React from 'react';\nimport './App.css';\nimport api from './api';\nimport CardContainer from './components/CardContainer';\nimport GithubLink from './components/GithubLink';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GithubLink />\n      <CardContainer recipes={api} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}